#include <iostream>
#include <cstdlib>
#include <map>
using namespace std;

/*
 * Project Euler: Problem 029 (http://projecteuler.net/problem=29)
 */

// How many distinct terms in sequence generated by a^b with
// 2 <= a <= 100 and 2 <= b <= 100 ?

// define r smallest root of a: a = r^p
// "Canonical" form of a^b is then r^(p.b)

int main( int argc, char** argv )
{
    int n = 100;
    if ( argc > 1 ) n = atoi( argv[1] );
    if ( n > 100 ) n = 100;

    // Initialise table of square, cubes, ... between 2 and 100
    map< int, int > roots;
    map< int, int > powers;
    roots[4]   = 2;  powers[4]   = 2; // 2^2
    roots[8]   = 2;  powers[8]   = 3; // 2^3
    roots[9]   = 3;  powers[9]   = 2; // 3^2
    roots[16]  = 2;  powers[16]  = 4; // 2^4 also a square
    roots[25]  = 5;  powers[25]  = 2; // 5^2
    roots[27]  = 3;  powers[27]  = 3; // 3^3
    roots[32]  = 2;  powers[32]  = 5; // 2^5
    roots[36]  = 6;  powers[36]  = 2; // 6^2
    roots[49]  = 7;  powers[49]  = 2; // 7^2
    roots[64]  = 2;  powers[64]  = 6; // 2^6 also a square and a cube
    roots[81]  = 3;  powers[81]  = 4; // 3^4 also a square
    roots[100] = 10; powers[100] = 2; // 10^2

    map< int, int > counter;

    for( int a = 2; a <= n; ++a )
    {
        int r = roots[a];
        int p = powers[a];
        for( int b = 2; b <= n; ++b )
        {
            // if there is a minimum r such as r < a and a = r^p
            // a^b can be rewritten in canonical form r^(p.b)
            // increment counter for pair ( r, p.b ) ( or (a,b otherwise)
            int real_a = ( r > 0 ? r : a );
            int real_b = ( p > 0 ? p*b : b );
            ++counter[ real_a - 1 + 100*( real_b - 1 ) ];
        }
    }

    for( map<int,int>::iterator it = counter.begin();
         it != counter.end(); ++it )
    {
        /*
        if ( it->second > 1 )
        {
            int k = it->first;
            cout << (k%100)+1 << "^" << (k/100)+1 << " counted "
                 << it->second << " times." << endl;
        }
        */
    }
    cout << "Distinct terms generated by a^b, a,b in [2," << n << "]:" << endl;
    cout << "Answer: " << counter.size() << endl;
    return 0;
}
